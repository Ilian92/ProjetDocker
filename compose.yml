services:
    db:
        image: mysql:8.0
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: laravel
            MYSQL_USER: laravel
            MYSQL_PASSWORD: secret
        volumes:
            - mysql_data:/var/lib/mysql
        networks:
            - web

    php1:
        build: .
        volumes:
            - ./Serveur1:/var/www/html
        environment:
            DB_HOST: db
            DB_DATABASE: laravel
            DB_USERNAME: laravel
            DB_PASSWORD: secret
        depends_on:
            - db
        networks:
            - web

    php2:
        build: .
        volumes:
            - ./Serveur2:/var/www/html
        environment:
            DB_HOST: db
            DB_DATABASE: laravel
            DB_USERNAME: laravel
            DB_PASSWORD: secret
        depends_on:
            - db
        networks:
            - web

    nginx1:
        image: nginx:alpine
        ports:
            - "8081:80"
        volumes:
            - ./Serveur1/Config.conf:/etc/nginx/conf.d/default.conf
            - ./Serveur1:/var/www/html
        depends_on:
            - php1
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.nginx1.rule=Host(`serveur1.localhost`)"
            - "traefik.http.services.nginx1.loadbalancer.server.port=80"
        networks:
            - web

    nginx2:
        image: nginx:alpine
        ports:
            - "8082:80"
        volumes:
            - ./Serveur2/Config.conf:/etc/nginx/conf.d/default.conf
            - ./Serveur2:/var/www/html
        depends_on:
            - php2
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.nginx2.rule=Host(`serveur2.localhost`)"
            - "traefik.http.services.nginx2.loadbalancer.server.port=80"
        networks:
            - web

    traefik:
        image: traefik:v2.5
        command:
            - "--api.insecure=true"
            - "--providers.docker=true"
            - "--entrypoints.web.address=:80"
        ports:
            - "80:80"
            - "8080:8080"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
        networks:
            - web

networks:
    web:
        external: false

volumes:
    mysql_data:
